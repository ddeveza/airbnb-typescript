{
    "sourceFile": "app/components/CategoryBox.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 28,
            "patches": [
                {
                    "date": 1692329579553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692329737412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,19 @@\n 'use client'\n import React from 'react'\n+import { IconType } from 'react-icons'\n \n-const CategoryBox = () => {\n+interface CategoryBoxProps{\n+    icon:IconType;\n+    label:string;\n+    selected?: boolean;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({\n+    icon,\n+    label,\n+    selected\n+}) => {\n   return (\n     <div>CategoryBox</div>\n   )\n }\n"
                },
                {
                    "date": 1692329775801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n interface CategoryBoxProps{\n     icon:IconType;\n     label:string;\n     selected?: boolean;\n+    description:string;\n }\n \n const CategoryBox: React.FC<CategoryBoxProps> = ({\n     icon,\n"
                },
                {
                    "date": 1692583948966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n 'use client'\n+import classNames from 'classnames';\n import React from 'react'\n import { IconType } from 'react-icons'\n \n interface CategoryBoxProps{\n@@ -11,12 +12,14 @@\n \n const CategoryBox: React.FC<CategoryBoxProps> = ({\n     icon,\n     label,\n-    selected\n+    selected,\n+    description\n }) => {\n   return (\n-    <div>CategoryBox</div>\n+    <div className={classNames('',\n+    {})}>CategoryBox</div>\n   )\n }\n \n export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692583979648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     selected,\n     description\n }) => {\n   return (\n-    <div className={classNames('',\n+    <div className={classNames('flex',\n     {})}>CategoryBox</div>\n   )\n }\n \n"
                },
                {
                    "date": 1692583986276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+'use client'\n+import classNames from 'classnames';\n+import React from 'react'\n+import { IconType } from 'react-icons'\n+\n+interface CategoryBoxProps{\n+    icon:IconType;\n+    label:string;\n+    selected?: boolean;\n+    description:string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({\n+    icon,\n+    label,\n+    selected,\n+    description\n+}) => {\n+  return (\n+    <div className={classNames('flex flex-col',\n+    {})}>CategoryBox</div>\n+  )\n+}\n+\n+export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692583996221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,35 +16,10 @@\n     selected,\n     description\n }) => {\n   return (\n-    <div className={classNames('flex flex-col',\n+    <div className={classNames('flex flex-col items-center',\n     {})}>CategoryBox</div>\n   )\n }\n \n-export default CategoryBox\n-'use client'\n-import classNames from 'classnames';\n-import React from 'react'\n-import { IconType } from 'react-icons'\n-\n-interface CategoryBoxProps{\n-    icon:IconType;\n-    label:string;\n-    selected?: boolean;\n-    description:string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({\n-    icon,\n-    label,\n-    selected,\n-    description\n-}) => {\n-  return (\n-    <div className={classNames('flex',\n-    {})}>CategoryBox</div>\n-  )\n-}\n-\n export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692584004698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     selected,\n     description\n }) => {\n   return (\n-    <div className={classNames('flex flex-col items-center',\n+    <div className={classNames('flex flex-col items-center justify-center',\n     {})}>CategoryBox</div>\n   )\n }\n \n"
                },
                {
                    "date": 1692584011280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+'use client'\n+import classNames from 'classnames';\n+import React from 'react'\n+import { IconType } from 'react-icons'\n+\n+interface CategoryBoxProps{\n+    icon:IconType;\n+    label:string;\n+    selected?: boolean;\n+    description:string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({\n+    icon,\n+    label,\n+    selected,\n+    description\n+}) => {\n+  return (\n+    <div className={classNames('flex flex-col items-center justify-center gap-2',\n+    {})}>CategoryBox</div>\n+  )\n+}\n+\n+export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692584017243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,35 +16,10 @@\n     selected,\n     description\n }) => {\n   return (\n-    <div className={classNames('flex flex-col items-center justify-center gap-2',\n+    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3',\n     {})}>CategoryBox</div>\n   )\n }\n \n-export default CategoryBox\n-'use client'\n-import classNames from 'classnames';\n-import React from 'react'\n-import { IconType } from 'react-icons'\n-\n-interface CategoryBoxProps{\n-    icon:IconType;\n-    label:string;\n-    selected?: boolean;\n-    description:string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({\n-    icon,\n-    label,\n-    selected,\n-    description\n-}) => {\n-  return (\n-    <div className={classNames('flex flex-col items-center justify-center',\n-    {})}>CategoryBox</div>\n-  )\n-}\n-\n export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692584027395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     selected,\n     description\n }) => {\n   return (\n-    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3',\n+    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3 border-b-2',\n     {})}>CategoryBox</div>\n   )\n }\n \n"
                },
                {
                    "date": 1692584046566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+'use client'\n+import classNames from 'classnames';\n+import React from 'react'\n+import { IconType } from 'react-icons'\n+\n+interface CategoryBoxProps{\n+    icon:IconType;\n+    label:string;\n+    selected?: boolean;\n+    description:string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({\n+    icon,\n+    label,\n+    selected,\n+    description\n+}) => {\n+  return (\n+    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800',\n+    {})}>CategoryBox</div>\n+  )\n+}\n+\n+export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692584152354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+'use client'\n+import classNames from 'classnames';\n+import React from 'react'\n+import { IconType } from 'react-icons'\n+\n+interface CategoryBoxProps{\n+    icon:IconType;\n+    label:string;\n+    selected?: boolean;\n+    description:string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({\n+    icon,\n+    label,\n+    selected,\n+    description\n+}) => {\n+  return (\n+    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800',\n+    {'border-b-neutral-800': selected , 'border-transparent' : !selected})}>CategoryBox</div>\n+  )\n+}\n+\n+export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692584197068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+/** @format */\n+\n+\"use client\";\n+import classNames from \"classnames\";\n+import React from \"react\";\n+import { IconType } from \"react-icons\";\n+\n+interface CategoryBoxProps {\n+      icon: IconType;\n+      label: string;\n+      selected?: boolean;\n+      description: string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({ icon, label, selected, description }) => {\n+      return (\n+            <div className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", \n+                  { \"border-b-neutral-800\": selected, \n+                    \"border-transparent\": !selected \n+                    })}>\n+                  CategoryBox\n+            </div>\n+      );\n+};\n+\n+export default CategoryBox;\n"
                },
                {
                    "date": 1692584202520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,79 +23,4 @@\n       );\n };\n \n export default CategoryBox;\n-'use client'\n-import classNames from 'classnames';\n-import React from 'react'\n-import { IconType } from 'react-icons'\n-\n-interface CategoryBoxProps{\n-    icon:IconType;\n-    label:string;\n-    selected?: boolean;\n-    description:string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({\n-    icon,\n-    label,\n-    selected,\n-    description\n-}) => {\n-  return (\n-    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800',\n-    {'border-b-neutral-800': selected , 'border-transparent' : !selected})}>CategoryBox</div>\n-  )\n-}\n-\n-export default CategoryBox\n-'use client'\n-import classNames from 'classnames';\n-import React from 'react'\n-import { IconType } from 'react-icons'\n-\n-interface CategoryBoxProps{\n-    icon:IconType;\n-    label:string;\n-    selected?: boolean;\n-    description:string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({\n-    icon,\n-    label,\n-    selected,\n-    description\n-}) => {\n-  return (\n-    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800',\n-    {})}>CategoryBox</div>\n-  )\n-}\n-\n-export default CategoryBox\n-'use client'\n-import classNames from 'classnames';\n-import React from 'react'\n-import { IconType } from 'react-icons'\n-\n-interface CategoryBoxProps{\n-    icon:IconType;\n-    label:string;\n-    selected?: boolean;\n-    description:string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({\n-    icon,\n-    label,\n-    selected,\n-    description\n-}) => {\n-  return (\n-    <div className={classNames('flex flex-col items-center justify-center gap-2 p-3 border-b-2',\n-    {})}>CategoryBox</div>\n-  )\n-}\n-\n-export default CategoryBox\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692584242720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n const CategoryBox: React.FC<CategoryBoxProps> = ({ icon, label, selected, description }) => {\n       return (\n             <div className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", \n-                  { \"border-b-neutral-800\": selected, \n+                  { \"border-b-neutral-800 text-neutral-800\": selected, \n                     \"border-transparent\": !selected \n                     })}>\n                   CategoryBox\n             </div>\n"
                },
                {
                    "date": 1692584255565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n const CategoryBox: React.FC<CategoryBoxProps> = ({ icon, label, selected, description }) => {\n       return (\n             <div className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", \n                   { \"border-b-neutral-800 text-neutral-800\": selected, \n-                    \"border-transparent\": !selected \n+                    \"border-transparent text-neutral-500\": !selected \n                     })}>\n                   CategoryBox\n             </div>\n       );\n"
                },
                {
                    "date": 1692584313515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+/** @format */\n+\n+\"use client\";\n+import classNames from \"classnames\";\n+import React from \"react\";\n+import { IconType } from \"react-icons\";\n+\n+interface CategoryBoxProps {\n+      icon: IconType;\n+      label: string;\n+      selected?: boolean;\n+      description: string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n+      return (\n+            <div\n+                  className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n+                        \"border-b-neutral-800 text-neutral-800\": selected,\n+                        \"border-transparent text-neutral-500\": !selected,\n+                  })}\n+\n+            >\n+              <Icon size={26}/>\n+            </div>\n+      );\n+};\n+\n+export default CategoryBox;\n"
                },
                {
                    "date": 1692584334821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,35 +21,10 @@\n                   })}\n \n             >\n               <Icon size={26}/>\n+              <div className=\"font-medium text-sm\"></div>\n             </div>\n       );\n };\n \n export default CategoryBox;\n-/** @format */\n-\n-\"use client\";\n-import classNames from \"classnames\";\n-import React from \"react\";\n-import { IconType } from \"react-icons\";\n-\n-interface CategoryBoxProps {\n-      icon: IconType;\n-      label: string;\n-      selected?: boolean;\n-      description: string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({ icon, label, selected, description }) => {\n-      return (\n-            <div className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", \n-                  { \"border-b-neutral-800 text-neutral-800\": selected, \n-                    \"border-transparent text-neutral-500\": !selected \n-                    })}>\n-                  CategoryBox\n-            </div>\n-      );\n-};\n-\n-export default CategoryBox;\n"
                },
                {
                    "date": 1692584341693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n                   })}\n \n             >\n               <Icon size={26}/>\n-              <div className=\"font-medium text-sm\"></div>\n+              <div className=\"font-medium text-sm\">{label}</div>\n             </div>\n       );\n };\n \n"
                },
                {
                    "date": 1692584582565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n /** @format */\n \n \"use client\";\n import classNames from \"classnames\";\n+import { useRouter, useSearchParams } from \"next/navigation\";\n import React from \"react\";\n import { IconType } from \"react-icons\";\n \n interface CategoryBoxProps {\n@@ -12,8 +13,12 @@\n       description: string;\n }\n \n const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n+\n+      const router = useRouter();\n+      const params = useSearchParams())\n+\n       return (\n             <div\n                   className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n                         \"border-b-neutral-800 text-neutral-800\": selected,\n"
                },
                {
                    "date": 1692584680443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,11 @@\n \n \"use client\";\n import classNames from \"classnames\";\n import { useRouter, useSearchParams } from \"next/navigation\";\n-import React from \"react\";\n+import React, { useCallback } from \"react\";\n import { IconType } from \"react-icons\";\n+import qs from 'query-string'\n \n interface CategoryBoxProps {\n       icon: IconType;\n       label: string;\n@@ -15,10 +16,15 @@\n \n const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n \n       const router = useRouter();\n-      const params = useSearchParams())\n+      const params = useSearchParams()\n \n+      const handleClick = useCallback(()=>{\n+        let currentQuery = {};\n+\n+      },[])\n+\n       return (\n             <div\n                   className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n                         \"border-b-neutral-800 text-neutral-800\": selected,\n"
                },
                {
                    "date": 1692584689599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+/** @format */\n+\n+\"use client\";\n+import classNames from \"classnames\";\n+import { useRouter, useSearchParams } from \"next/navigation\";\n+import React, { useCallback } from \"react\";\n+import { IconType } from \"react-icons\";\n+import qs from 'query-string'\n+\n+interface CategoryBoxProps {\n+      icon: IconType;\n+      label: string;\n+      selected?: boolean;\n+      description: string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n+\n+      const router = useRouter();\n+      const params = useSearchParams()\n+\n+      const handleClick = useCallback(()=>{\n+        let currentQuery = {};\n+        \n+      },[])\n+\n+      return (\n+            <div\n+                  className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n+                        \"border-b-neutral-800 text-neutral-800\": selected,\n+                        \"border-transparent text-neutral-500\": !selected,\n+                  })}\n+\n+            >\n+              <Icon size={26}/>\n+              <div className=\"font-medium text-sm\">{label}</div>\n+            </div>\n+      );\n+};\n+\n+export default CategoryBox;\n"
                },
                {
                    "date": 1692585943756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,50 +20,22 @@\n       const params = useSearchParams()\n \n       const handleClick = useCallback(()=>{\n         let currentQuery = {};\n-        \n-      },[])\n+        //to check if params is empty\n+        if (params) {\n+          currentQuery = qs.parse(params.toString()); \n+        }\n \n-      return (\n-            <div\n-                  className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n-                        \"border-b-neutral-800 text-neutral-800\": selected,\n-                        \"border-transparent text-neutral-500\": !selected,\n-                  })}\n+      const updatedQuery:any = {\n+        ...currentQuery,\n+        category : label\n+      }\n \n-            >\n-              <Icon size={26}/>\n-              <div className=\"font-medium text-sm\">{label}</div>\n-            </div>\n-      );\n-};\n-\n-export default CategoryBox;\n-/** @format */\n-\n-\"use client\";\n-import classNames from \"classnames\";\n-import { useRouter, useSearchParams } from \"next/navigation\";\n-import React, { useCallback } from \"react\";\n-import { IconType } from \"react-icons\";\n-import qs from 'query-string'\n-\n-interface CategoryBoxProps {\n-      icon: IconType;\n-      label: string;\n-      selected?: boolean;\n-      description: string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n-\n-      const router = useRouter();\n-      const params = useSearchParams()\n-\n-      const handleClick = useCallback(()=>{\n-        let currentQuery = {};\n-\n+      if (params?.get('category') === label) {\n+        delete updatedQuery.category; //to reset the existing query\n+      }\n+        const url = qs.stringifyUrl({url:'/' , query:updatedQuery}, {skipNull:true})\n       },[])\n \n       return (\n             <div\n"
                },
                {
                    "date": 1692585977209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,25 +18,26 @@\n \n       const router = useRouter();\n       const params = useSearchParams()\n \n-      const handleClick = useCallback(()=>{\n-        let currentQuery = {};\n-        //to check if params is empty\n-        if (params) {\n-          currentQuery = qs.parse(params.toString()); \n-        }\n+      const handleClick = useCallback(() => {\n+            let currentQuery = {};\n+            //to check if params is empty\n+            if (params) {\n+                  currentQuery = qs.parse(params.toString());\n+            }\n \n-      const updatedQuery:any = {\n-        ...currentQuery,\n-        category : label\n-      }\n+            const updatedQuery: any = {\n+                  ...currentQuery,\n+                  category: label,\n+            };\n \n-      if (params?.get('category') === label) {\n-        delete updatedQuery.category; //to reset the existing query\n-      }\n-        const url = qs.stringifyUrl({url:'/' , query:updatedQuery}, {skipNull:true})\n-      },[])\n+            if (params?.get(\"category\") === label) {\n+                  delete updatedQuery.category; //to reset the existing query\n+            }\n+            const url = qs.stringifyUrl({ url: \"/\", query: updatedQuery }, { skipNull: true });\n+            router.push(url)\n+      }, [label,params]);\n \n       return (\n             <div\n                   className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n"
                },
                {
                    "date": 1692585986298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n                   delete updatedQuery.category; //to reset the existing query\n             }\n             const url = qs.stringifyUrl({ url: \"/\", query: updatedQuery }, { skipNull: true });\n             router.push(url)\n-      }, [label,params]);\n+      }, [label,params,router]);\n \n       return (\n             <div\n                   className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n"
                },
                {
                    "date": 1692586000696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+/** @format */\n+\n+\"use client\";\n+import classNames from \"classnames\";\n+import { useRouter, useSearchParams } from \"next/navigation\";\n+import React, { useCallback } from \"react\";\n+import { IconType } from \"react-icons\";\n+import qs from 'query-string'\n+\n+interface CategoryBoxProps {\n+      icon: IconType;\n+      label: string;\n+      selected?: boolean;\n+      description: string;\n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n+\n+      const router = useRouter();\n+      const params = useSearchParams()\n+\n+      const handleClick = useCallback(() => {\n+            let currentQuery = {};\n+            //to check if params is empty\n+            if (params) {\n+                  currentQuery = qs.parse(params.toString());\n+            }\n+\n+            const updatedQuery: any = {\n+                  ...currentQuery,\n+                  category: label,\n+            };\n+\n+            if (params?.get(\"category\") === label) {\n+                  delete updatedQuery.category; //to reset the existing query\n+            }\n+            const url = qs.stringifyUrl({ url: \"/\", query: updatedQuery }, { skipNull: true });\n+            router.push(url);\n+\n+      }, [label,params,router]);\n+\n+      return (\n+            <div onClick={handleClick}\n+                  className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n+                        \"border-b-neutral-800 text-neutral-800\": selected,\n+                        \"border-transparent text-neutral-500\": !selected,\n+                  })}\n+\n+            >\n+              <Icon size={26}/>\n+              <div className=\"font-medium text-sm\">{label}</div>\n+            </div>\n+      );\n+};\n+\n+export default CategoryBox;\n"
                },
                {
                    "date": 1692586402564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+/** @format */\n+\n+\"use client\";\n+import classNames from \"classnames\";\n+import { useRouter, useSearchParams } from \"next/navigation\";\n+import React, { useCallback } from \"react\";\n+import { IconType } from \"react-icons\";\n+import qs from 'query-string'\n+\n+interface CategoryBoxProps {\n+      icon: IconType;\n+      label: string;\n+      selected?: boolean;\n+    \n+}\n+\n+const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected }) => {\n+\n+      const router = useRouter();\n+      const params = useSearchParams()\n+\n+      const handleClick = useCallback(() => {\n+            let currentQuery = {};\n+            //to check if params is empty\n+            if (params) {\n+                  currentQuery = qs.parse(params.toString());\n+            }\n+\n+            const updatedQuery: any = {\n+                  ...currentQuery,\n+                  category: label,\n+            };\n+\n+            if (params?.get(\"category\") === label) {\n+                  delete updatedQuery.category; //to reset the existing query\n+            }\n+            const url = qs.stringifyUrl({ url: \"/\", query: updatedQuery }, { skipNull: true });\n+            router.push(url);\n+\n+      }, [label,params,router]);\n+\n+      return (\n+            <div\n+                  onClick={handleClick}\n+                  className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n+                        \"border-b-neutral-800 text-neutral-800\": selected,\n+                        \"border-transparent text-neutral-500\": !selected,\n+                  })}\n+            >\n+                  <Icon size={26} />\n+                  <div className='font-medium text-sm'>{label}</div>\n+            </div>\n+      );\n+};\n+\n+export default CategoryBox;\n"
                },
                {
                    "date": 1692586417597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \n interface CategoryBoxProps {\n       icon: IconType;\n       label: string;\n-      selected?: boolean;\n+      selected: boolean;\n     \n }\n \n const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected }) => {\n@@ -53,115 +53,4 @@\n       );\n };\n \n export default CategoryBox;\n-/** @format */\n-\n-\"use client\";\n-import classNames from \"classnames\";\n-import { useRouter, useSearchParams } from \"next/navigation\";\n-import React, { useCallback } from \"react\";\n-import { IconType } from \"react-icons\";\n-import qs from 'query-string'\n-\n-interface CategoryBoxProps {\n-      icon: IconType;\n-      label: string;\n-      selected?: boolean;\n-      description: string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n-\n-      const router = useRouter();\n-      const params = useSearchParams()\n-\n-      const handleClick = useCallback(() => {\n-            let currentQuery = {};\n-            //to check if params is empty\n-            if (params) {\n-                  currentQuery = qs.parse(params.toString());\n-            }\n-\n-            const updatedQuery: any = {\n-                  ...currentQuery,\n-                  category: label,\n-            };\n-\n-            if (params?.get(\"category\") === label) {\n-                  delete updatedQuery.category; //to reset the existing query\n-            }\n-            const url = qs.stringifyUrl({ url: \"/\", query: updatedQuery }, { skipNull: true });\n-            router.push(url);\n-\n-      }, [label,params,router]);\n-\n-      return (\n-            <div onClick={handleClick}\n-                  className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n-                        \"border-b-neutral-800 text-neutral-800\": selected,\n-                        \"border-transparent text-neutral-500\": !selected,\n-                  })}\n-\n-            >\n-              <Icon size={26}/>\n-              <div className=\"font-medium text-sm\">{label}</div>\n-            </div>\n-      );\n-};\n-\n-export default CategoryBox;\n-/** @format */\n-\n-\"use client\";\n-import classNames from \"classnames\";\n-import { useRouter, useSearchParams } from \"next/navigation\";\n-import React, { useCallback } from \"react\";\n-import { IconType } from \"react-icons\";\n-import qs from 'query-string'\n-\n-interface CategoryBoxProps {\n-      icon: IconType;\n-      label: string;\n-      selected?: boolean;\n-      description: string;\n-}\n-\n-const CategoryBox: React.FC<CategoryBoxProps> = ({ icon:Icon, label, selected, description }) => {\n-\n-      const router = useRouter();\n-      const params = useSearchParams()\n-\n-      const handleClick = useCallback(() => {\n-            let currentQuery = {};\n-            //to check if params is empty\n-            if (params) {\n-                  currentQuery = qs.parse(params.toString());\n-            }\n-\n-            const updatedQuery: any = {\n-                  ...currentQuery,\n-                  category: label,\n-            };\n-\n-            if (params?.get(\"category\") === label) {\n-                  delete updatedQuery.category; //to reset the existing query\n-            }\n-            const url = qs.stringifyUrl({ url: \"/\", query: updatedQuery }, { skipNull: true });\n-            router.push(url)\n-      }, [label,params,router]);\n-\n-      return (\n-            <div\n-                  className={classNames(\"flex flex-col items-center justify-center gap-2 p-3 border-b-2 hover:text-neutral-800\", {\n-                        \"border-b-neutral-800 text-neutral-800\": selected,\n-                        \"border-transparent text-neutral-500\": !selected,\n-                  })}\n-\n-            >\n-              <Icon size={26}/>\n-              <div className=\"font-medium text-sm\">{label}</div>\n-            </div>\n-      );\n-};\n-\n-export default CategoryBox;\n"
                }
            ],
            "date": 1692329579553,
            "name": "Commit-0",
            "content": "'use client'\nimport React from 'react'\n\nconst CategoryBox = () => {\n  return (\n    <div>CategoryBox</div>\n  )\n}\n\nexport default CategoryBox"
        }
    ]
}