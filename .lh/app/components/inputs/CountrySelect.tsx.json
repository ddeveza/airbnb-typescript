{
    "sourceFile": "app/components/inputs/CountrySelect.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1692929431826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692930153993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \"use client\"\n-\n+import Select from 'react-select'\n const CountrySelect = () => {\n   return (\n     <div>CountrySelect</div>\n   )\n"
                },
                {
                    "date": 1692930216180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,18 @@\n-\"use client\"\n-import Select from 'react-select'\n-const CountrySelect = () => {\n-  return (\n-    <div>CountrySelect</div>\n-  )\n+/** @format */\n+\n+\"use client\";\n\\ No newline at end of file\n+import Select from \"react-select\";\n+\n+export type CountrySelectValue = {\n+    flag:string;\n+    label:string;\n+    latlng:string;\n+    region:string;\n+    value: string;\n }\n \n-export default CountrySelect\n+const CountrySelect = () => {\n+      return <div>CountrySelect</div>;\n+};\n+\n+export default CountrySelect;\n"
                },
                {
                    "date": 1692930388808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,17 @@\n     region:string;\n     value: string;\n }\n \n-const CountrySelect = () => {\n+interface CountrySelectProps { \n+    value?:CountrySelectValue;\n+    onChange: (value:CountrySelectValue) => void;\n+}\n\\ No newline at end of file\n+\n+const CountrySelect: React.FC<CountrySelectProps> = ({\n+    value,\n+    onChange\n+}) => {\n       return <div>CountrySelect</div>;\n };\n \n-export default CountrySelect;\n+export default CountrySelect;\n"
                },
                {
                    "date": 1692930485021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n /** @format */\n \n \"use client\";\n+import useCountries from \"@/app/hooks/userCountries\";\n import Select from \"react-select\";\n \n export type CountrySelectValue = {\n     flag:string;\n@@ -19,8 +20,9 @@\n const CountrySelect: React.FC<CountrySelectProps> = ({\n     value,\n     onChange\n }) => {\n+    const {getAll} = useCountries()\n       return <div>CountrySelect</div>;\n };\n \n export default CountrySelect;\n"
                },
                {
                    "date": 1692930493552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n const CountrySelect: React.FC<CountrySelectProps> = ({\n     value,\n     onChange\n }) => {\n-    const {getAll} = useCountries()\n+    const {getAll} = useCountries();\n+    \n       return <div>CountrySelect</div>;\n };\n\\ No newline at end of file\n \n-export default CountrySelect;\n+export default CountrySelect;\n"
                },
                {
                    "date": 1692930544553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,26 +4,27 @@\n import useCountries from \"@/app/hooks/userCountries\";\n import Select from \"react-select\";\n \n export type CountrySelectValue = {\n-    flag:string;\n-    label:string;\n-    latlng:string;\n-    region:string;\n-    value: string;\n-}\n+      flag: string;\n+      label: string;\n+      latlng: string;\n+      region: string;\n+      value: string;\n+};\n \n-interface CountrySelectProps { \n-    value?:CountrySelectValue;\n-    onChange: (value:CountrySelectValue) => void;\n+interface CountrySelectProps {\n+      value?: CountrySelectValue;\n+      onChange: (value: CountrySelectValue) => void;\n }\n \n-const CountrySelect: React.FC<CountrySelectProps> = ({\n\\ No newline at end of file\n-    value,\n-    onChange\n-}) => {\n-    const {getAll} = useCountries();\n-    \n-      return <div>CountrySelect</div>;\n+const CountrySelect: React.FC<CountrySelectProps> = ({ value, onChange }) => {\n+      const { getAll } = useCountries();\n+\n+      return (\n+            <div>\n+                  <Select placeholder='Anywhere\" />\n+            </div>\n+      );\n };\n \n-export default CountrySelect;\n+export default CountrySelect;\n"
                },
                {
                    "date": 1692930551531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+/** @format */\n+\n+\"use client\";\n+import useCountries from \"@/app/hooks/userCountries\";\n+import Select from \"react-select\";\n+\n+export type CountrySelectValue = {\n+      flag: string;\n+      label: string;\n+      latlng: string;\n+      region: string;\n+      value: string;\n+};\n+\n+interface CountrySelectProps {\n+      value?: CountrySelectValue;\n+      onChange: (value: CountrySelectValue) => void;\n+}\n+\n+const CountrySelect: React.FC<CountrySelectProps> = ({ value, onChange }) => {\n+      const { getAll } = useCountries();\n+\n+      return (\n+            <div>\n+                  <Select placeholder=\"Anywhere\" />\n+            </div>\n+      );\n+};\n+\n+export default CountrySelect;\n"
                },
                {
                    "date": 1692930582057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,40 +21,10 @@\n       const { getAll } = useCountries();\n \n       return (\n             <div>\n-                  <Select placeholder=\"Anywhere\" />\n+                  <Select placeholder=\"Anywhere\" isClearable  options={getAll()}/>\n             </div>\n       );\n };\n \n export default CountrySelect;\n-/** @format */\n-\n-\"use client\";\n-import useCountries from \"@/app/hooks/userCountries\";\n-import Select from \"react-select\";\n-\n-export type CountrySelectValue = {\n-      flag: string;\n-      label: string;\n-      latlng: string;\n-      region: string;\n-      value: string;\n-};\n-\n-interface CountrySelectProps {\n-      value?: CountrySelectValue;\n-      onChange: (value: CountrySelectValue) => void;\n-}\n-\n-const CountrySelect: React.FC<CountrySelectProps> = ({ value, onChange }) => {\n-      const { getAll } = useCountries();\n-\n-      return (\n-            <div>\n-                  <Select placeholder='Anywhere\" />\n-            </div>\n-      );\n-};\n-\n-export default CountrySelect;\n"
                },
                {
                    "date": 1692930672262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n       const { getAll } = useCountries();\n \n       return (\n             <div>\n-                  <Select placeholder=\"Anywhere\" isClearable  options={getAll()}/>\n+                  <Select placeholder=\"Anywhere\" isClearable  options={getAll()} value={value}/>\n             </div>\n       );\n };\n \n"
                },
                {
                    "date": 1692930780299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+/** @format */\n+\n+\"use client\";\n+import useCountries from \"@/app/hooks/userCountries\";\n+import Select from \"react-select\";\n+\n+export type CountrySelectValue = {\n+      flag: string;\n+      label: string;\n+      latlng: string;\n+      region: string;\n+      value: string;\n+};\n+\n+interface CountrySelectProps {\n+      value?: CountrySelectValue;\n+      onChange: (value: CountrySelectValue) => void;\n+}\n+\n+const CountrySelect: React.FC<CountrySelectProps> = ({ value, onChange }) => {\n+      const { getAll } = useCountries();\n+\n+      return (\n+            <div>\n+                  <Select placeholder=\"Anywhere\" isClearable  options={getAll()} value={value} onChange={(value) => onChange(value as CountrySelectValue)}/>\n+            </div>\n+      );\n+};\n+\n+export default CountrySelect;\n"
                },
                {
                    "date": 1692930789116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,40 +21,16 @@\n       const { getAll } = useCountries();\n \n       return (\n             <div>\n-                  <Select placeholder=\"Anywhere\" isClearable  options={getAll()} value={value} onChange={(value) => onChange(value as CountrySelectValue)}/>\n+                  <Select\n+                        placeholder='Anywhere'\n+                        isClearable\n+                        options={()=>getAll()}\n+                        value={value}\n+                        onChange={(value) => onChange(value as CountrySelectValue)}\n+                  />\n             </div>\n       );\n };\n \n export default CountrySelect;\n-/** @format */\n-\n-\"use client\";\n-import useCountries from \"@/app/hooks/userCountries\";\n-import Select from \"react-select\";\n-\n-export type CountrySelectValue = {\n-      flag: string;\n-      label: string;\n-      latlng: string;\n-      region: string;\n-      value: string;\n-};\n-\n-interface CountrySelectProps {\n-      value?: CountrySelectValue;\n-      onChange: (value: CountrySelectValue) => void;\n-}\n-\n-const CountrySelect: React.FC<CountrySelectProps> = ({ value, onChange }) => {\n-      const { getAll } = useCountries();\n-\n-      return (\n-            <div>\n-                  <Select placeholder=\"Anywhere\" isClearable  options={getAll()} value={value}/>\n-            </div>\n-      );\n-};\n-\n-export default CountrySelect;\n"
                },
                {
                    "date": 1692930821810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             <div>\n                   <Select\n                         placeholder='Anywhere'\n                         isClearable\n-                        options={()=>getAll()}\n+                        options={}\n                         value={value}\n                         onChange={(value) => onChange(value as CountrySelectValue)}\n                   />\n             </div>\n"
                },
                {
                    "date": 1692930898282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n export type CountrySelectValue = {\n       flag: string;\n       label: string;\n-      latlng: string;\n+      latlng: number[];\n       region: string;\n       value: string;\n };\n \n"
                },
                {
                    "date": 1692930904011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             <div>\n                   <Select\n                         placeholder='Anywhere'\n                         isClearable\n-                        options={}\n+                        options={getAll()}\n                         value={value}\n                         onChange={(value) => onChange(value as CountrySelectValue)}\n                   />\n             </div>\n"
                },
                {
                    "date": 1692932051934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,15 @@\n                         isClearable\n                         options={getAll()}\n                         value={value}\n                         onChange={(value) => onChange(value as CountrySelectValue)}\n+                        formatOptionLabel={(data) => (\n+                            <div className=\"flex flex-row items-center gap-3\">\n+                                <div>{data.flag}</div>\n+                                <div>\n+                                    </div>\n+                            </div>\n+                        )}\n                   />\n             </div>\n       );\n };\n"
                },
                {
                    "date": 1692932072525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,13 +28,17 @@\n                         options={getAll()}\n                         value={value}\n                         onChange={(value) => onChange(value as CountrySelectValue)}\n                         formatOptionLabel={(data) => (\n-                            <div className=\"flex flex-row items-center gap-3\">\n-                                <div>{data.flag}</div>\n-                                <div>\n+                              <div className='flex flex-row items-center gap-3'>\n+                                    <div>{data.flag}</div>\n+                                    <div>\n+                                        {data.label}\n+                                        <span>\n+                                            {data.region}\n+                                        </span>\n                                     </div>\n-                            </div>\n+                              </div>\n                         )}\n                   />\n             </div>\n       );\n"
                },
                {
                    "date": 1692932086738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n                               <div className='flex flex-row items-center gap-3'>\n                                     <div>{data.flag}</div>\n                                     <div>\n                                         {data.label}\n-                                        <span>\n+                                        <span className=\"text-neutral-800 ml-1\">\n                                             {data.region}\n                                         </span>\n                                     </div>\n                               </div>\n"
                },
                {
                    "date": 1692932117030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n                               <div className='flex flex-row items-center gap-3'>\n                                     <div>{data.flag}</div>\n                                     <div>\n                                         {data.label}\n-                                        <span className=\"text-neutral-800 ml-1\">\n+                                        <span className=\"text-neutral-500 ml-1\">\n                                             {data.region}\n                                         </span>\n                                     </div>\n                               </div>\n"
                },
                {
                    "date": 1692932239054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+/** @format */\n+\n+\"use client\";\n+import useCountries from \"@/app/hooks/userCountries\";\n+import Select from \"react-select\";\n+\n+export type CountrySelectValue = {\n+      flag: string;\n+      label: string;\n+      latlng: number[];\n+      region: string;\n+      value: string;\n+};\n+\n+interface CountrySelectProps {\n+      value?: CountrySelectValue;\n+      onChange: (value: CountrySelectValue) => void;\n+}\n+\n+const CountrySelect: React.FC<CountrySelectProps> = ({ value, onChange }) => {\n+      const { getAll } = useCountries();\n+\n+      return (\n+            <div>\n+                  <Select\n+                        placeholder='Anywhere'\n+                        isClearable\n+                        options={getAll()}\n+                        value={value}\n+                        onChange={(value) => onChange(value as CountrySelectValue)}\n+                        formatOptionLabel={(data) => (\n+                              <div className='flex flex-row items-center gap-3'>\n+                                    <div>{data.flag}</div>\n+                                    <div>\n+                                        {data.label}\n+                                        <span className=\"text-neutral-500 ml-1\">\n+                                            {data.region}\n+                                        </span>\n+                                    </div>\n+                              </div>\n+                        )}\n+                        classNames={{\n+                            control: ()=>'p-3 border-2',\n+                            input:()=>'text-lg',\n+                            option:()=>'text-lg'\n+                        }}\n+                        \n+                  />\n+            </div>\n+      );\n+};\n+\n+export default CountrySelect;\n"
                },
                {
                    "date": 1692932317525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,58 +43,20 @@\n                             control: ()=>'p-3 border-2',\n                             input:()=>'text-lg',\n                             option:()=>'text-lg'\n                         }}\n+                        theme={(theme)=>({\n+                            ...theme,\n+                            borderRadius:6,\n+                            colors:{\n+                                 ...theme.colors,\n+                                 primary:'black',\n+                                 primary25:'#ffe4e6'\n+                            }\n+                        })}\n                         \n                   />\n             </div>\n       );\n };\n \n export default CountrySelect;\n-/** @format */\n-\n-\"use client\";\n-import useCountries from \"@/app/hooks/userCountries\";\n-import Select from \"react-select\";\n-\n-export type CountrySelectValue = {\n-      flag: string;\n-      label: string;\n-      latlng: number[];\n-      region: string;\n-      value: string;\n-};\n-\n-interface CountrySelectProps {\n-      value?: CountrySelectValue;\n-      onChange: (value: CountrySelectValue) => void;\n-}\n-\n-const CountrySelect: React.FC<CountrySelectProps> = ({ value, onChange }) => {\n-      const { getAll } = useCountries();\n-\n-      return (\n-            <div>\n-                  <Select\n-                        placeholder='Anywhere'\n-                        isClearable\n-                        options={getAll()}\n-                        value={value}\n-                        onChange={(value) => onChange(value as CountrySelectValue)}\n-                        formatOptionLabel={(data) => (\n-                              <div className='flex flex-row items-center gap-3'>\n-                                    <div>{data.flag}</div>\n-                                    <div>\n-                                        {data.label}\n-                                        <span className=\"text-neutral-500 ml-1\">\n-                                            {data.region}\n-                                        </span>\n-                                    </div>\n-                              </div>\n-                        )}\n-                  />\n-            </div>\n-      );\n-};\n-\n-export default CountrySelect;\n"
                }
            ],
            "date": 1692929431826,
            "name": "Commit-0",
            "content": "\"use client\"\n\nconst CountrySelect = () => {\n  return (\n    <div>CountrySelect</div>\n  )\n}\n\nexport default CountrySelect"
        }
    ]
}