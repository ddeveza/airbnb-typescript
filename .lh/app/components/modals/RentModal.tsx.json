{
    "sourceFile": "app/components/modals/RentModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1692929164211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692929177467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n       return (\n             <Modal\n                   isOpen={rentModal.isOpen}\n                   onClose={rentModal.onClose}\n-                  onSubmit={rentModal.onClose}\n+                  onSubmit={onNext}\n                   actionLabel={actionLabel}\n                   secondaryActionLabel={secondaryActionLabel}\n                   secondaryAction={step===STEPS.CATEGORY ? undefined : onBack}\n                   title='Airbnb your home!'\n"
                },
                {
                    "date": 1692929307855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,123 @@\n+/** @format */\n+\n+\"use client\";\n+\n+import useRentModal from \"@/app/hooks/useRentModal\";\n+import Modal from \"./Modal\";\n+import { useMemo, useState } from \"react\";\n+import Heading from \"../Heading\";\n+import { categories } from \"../navbar/Categories\";\n+import CategoryInput from \"../inputs/CategoryInput\";\n+import { FieldValues, useForm } from \"react-hook-form\";\n+\n+enum STEPS {\n+      CATEGORY = 0,\n+      LOCATION = 1,\n+      INFO = 2,\n+      IMAGES = 3,\n+      DESCRIPTION = 4,\n+      PRICE = 5,\n+}\n+\n+const RentModal = () => {\n+      const rentModal = useRentModal();\n+      const [step, setStep] = useState(STEPS.CATEGORY);\n+\n+      const {\n+            register,\n+            handleSubmit,\n+            setValue,\n+            watch,\n+            formState:{\n+                  errors\n+            },\n+            reset\n+      } = useForm<FieldValues>({\n+            defaultValues:{\n+                  category:'',\n+                  location:null,\n+                  guestCount:1,\n+                  roomCount:1,\n+                  bathroomCount:1,\n+                  imageSrc: '',\n+                  price:1,\n+                  title:\"\",\n+                  description:''\n+            }\n+      });\n+\n+\n+      const category = watch('category'); // to store the form values\n+      const setCustomValue = (id:string,value:any) => {\n+            setValue(id, value , {\n+                  shouldValidate:true,\n+                  shouldDirty:true,\n+                  shouldTouch:true\n+            })\n+      }\n+\n+      const onBack = () => {\n+            setStep((val) => val - 1);\n+      };\n+\n+      const onNext = () => {\n+            setStep((val) => val + 1);\n+      };\n+\n+      const actionLabel = useMemo(() => {\n+            if (step === STEPS.PRICE) return \"Create\";\n+\n+            return \"Next\";\n+      }, [step]);\n+\n+      const secondaryActionLabel = useMemo(() => {\n+            if (step === STEPS.CATEGORY) {\n+                  return undefined;\n+            }\n+\n+            return \"Back\";\n+      }, [step]);\n+\n+\n+      let bodyContent =  (\n+            <div className='flex flex-col gap-8'>\n+                  <Heading\n+                        title='Which of these best describes your place?'\n+                        subtitle={\"Pick a category\"}\n+                  />\n+                  <div className='grid grid-cols-1 md:grid-cols-2 gap-3 max-h-[50vh] overflow-y-auto'>\n+                        {categories.map((item) => (\n+                              <div\n+                                    key={item.label}\n+                                    className='col-span-1'\n+                              >\n+                                    <CategoryInput icon={item.icon} label={item.label} onClick={(category)=>setCustomValue('category',category)} selected={category === item.label}/>\n+                              </div>\n+                        ))}\n+                  </div>\n+            </div>\n+      );\n+\n+      if(step === STEPS.LOCATION) {\n+            bodyContent = (\n+                  <div className=\"flex flex-col\">\n+                        Location Step!\n+                  </div>\n+            )\n+      }\n+\n+      return (\n+            <Modal\n+                  isOpen={rentModal.isOpen}\n+                  onClose={rentModal.onClose}\n+                  onSubmit={onNext}\n+                  actionLabel={actionLabel}\n+                  secondaryActionLabel={secondaryActionLabel}\n+                  secondaryAction={step===STEPS.CATEGORY ? undefined : onBack}\n+                  title='Airbnb your home!'\n+                  body={bodyContent}\n+            />\n+      );\n+};\n+\n+export default RentModal;\n"
                },
                {
                    "date": 1692929343623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,134 +99,12 @@\n       );\n \n       if(step === STEPS.LOCATION) {\n             bodyContent = (\n-                  <div className=\"flex flex-col\">\n-                        Location Step!\n-                  </div>\n-            )\n-      }\n+                  <div className=\"flex flex-col gap-8\">\n+                        <Heading title=\"Where is your place located\" subtitle=\"Help quests find you\"/>\n \n-      return (\n-            <Modal\n-                  isOpen={rentModal.isOpen}\n-                  onClose={rentModal.onClose}\n-                  onSubmit={onNext}\n-                  actionLabel={actionLabel}\n-                  secondaryActionLabel={secondaryActionLabel}\n-                  secondaryAction={step===STEPS.CATEGORY ? undefined : onBack}\n-                  title='Airbnb your home!'\n-                  body={bodyContent}\n-            />\n-      );\n-};\n-\n-export default RentModal;\n-/** @format */\n-\n-\"use client\";\n-\n-import useRentModal from \"@/app/hooks/useRentModal\";\n-import Modal from \"./Modal\";\n-import { useMemo, useState } from \"react\";\n-import Heading from \"../Heading\";\n-import { categories } from \"../navbar/Categories\";\n-import CategoryInput from \"../inputs/CategoryInput\";\n-import { FieldValues, useForm } from \"react-hook-form\";\n-\n-enum STEPS {\n-      CATEGORY = 0,\n-      LOCATION = 1,\n-      INFO = 2,\n-      IMAGES = 3,\n-      DESCRIPTION = 4,\n-      PRICE = 5,\n-}\n-\n-const RentModal = () => {\n-      const rentModal = useRentModal();\n-      const [step, setStep] = useState(STEPS.CATEGORY);\n-\n-      const {\n-            register,\n-            handleSubmit,\n-            setValue,\n-            watch,\n-            formState:{\n-                  errors\n-            },\n-            reset\n-      } = useForm<FieldValues>({\n-            defaultValues:{\n-                  category:'',\n-                  location:null,\n-                  guestCount:1,\n-                  roomCount:1,\n-                  bathroomCount:1,\n-                  imageSrc: '',\n-                  price:1,\n-                  title:\"\",\n-                  description:''\n-            }\n-      });\n-\n-\n-      const category = watch('category'); // to store the form values\n-      const setCustomValue = (id:string,value:any) => {\n-            setValue(id, value , {\n-                  shouldValidate:true,\n-                  shouldDirty:true,\n-                  shouldTouch:true\n-            })\n-      }\n-\n-      const onBack = () => {\n-            setStep((val) => val - 1);\n-      };\n-\n-      const onNext = () => {\n-            setStep((val) => val + 1);\n-      };\n-\n-      const actionLabel = useMemo(() => {\n-            if (step === STEPS.PRICE) return \"Create\";\n-\n-            return \"Next\";\n-      }, [step]);\n-\n-      const secondaryActionLabel = useMemo(() => {\n-            if (step === STEPS.CATEGORY) {\n-                  return undefined;\n-            }\n-\n-            return \"Back\";\n-      }, [step]);\n-\n-\n-      let bodyContent =  (\n-            <div className='flex flex-col gap-8'>\n-                  <Heading\n-                        title='Which of these best describes your place?'\n-                        subtitle={\"Pick a category\"}\n-                  />\n-                  <div className='grid grid-cols-1 md:grid-cols-2 gap-3 max-h-[50vh] overflow-y-auto'>\n-                        {categories.map((item) => (\n-                              <div\n-                                    key={item.label}\n-                                    className='col-span-1'\n-                              >\n-                                    <CategoryInput icon={item.icon} label={item.label} onClick={(category)=>setCustomValue('category',category)} selected={category === item.label}/>\n-                              </div>\n-                        ))}\n                   </div>\n-            </div>\n-      );\n-\n-      if(step === STEPS.LOCATION) {\n-            bodyContent = (\n-                  <div>\n-                        Location Step!\n-                  </div>\n             )\n       }\n \n       return (\n"
                },
                {
                    "date": 1692929436408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import Heading from \"../Heading\";\n import { categories } from \"../navbar/Categories\";\n import CategoryInput from \"../inputs/CategoryInput\";\n import { FieldValues, useForm } from \"react-hook-form\";\n+import CountrySelect from \"../inputs/CountrySelect\";\n \n enum STEPS {\n       CATEGORY = 0,\n       LOCATION = 1,\n@@ -101,9 +102,9 @@\n       if(step === STEPS.LOCATION) {\n             bodyContent = (\n                   <div className=\"flex flex-col gap-8\">\n                         <Heading title=\"Where is your place located\" subtitle=\"Help quests find you!\"/>\n-\n+                        <CountrySelect />\n                   </div>\n             )\n       }\n \n"
                },
                {
                    "date": 1692932389638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,126 @@\n+/** @format */\n+\n+\"use client\";\n+\n+import useRentModal from \"@/app/hooks/useRentModal\";\n+import Modal from \"./Modal\";\n+import { useMemo, useState } from \"react\";\n+import Heading from \"../Heading\";\n+import { categories } from \"../navbar/Categories\";\n+import CategoryInput from \"../inputs/CategoryInput\";\n+import { FieldValues, useForm } from \"react-hook-form\";\n+import CountrySelect from \"../inputs/CountrySelect\";\n+\n+enum STEPS {\n+      CATEGORY = 0,\n+      LOCATION = 1,\n+      INFO = 2,\n+      IMAGES = 3,\n+      DESCRIPTION = 4,\n+      PRICE = 5,\n+}\n+\n+const RentModal = () => {\n+      const rentModal = useRentModal();\n+      const [step, setStep] = useState(STEPS.CATEGORY);\n+\n+      const {\n+            register,\n+            handleSubmit,\n+            setValue,\n+            watch,\n+            formState:{\n+                  errors\n+            },\n+            reset\n+      } = useForm<FieldValues>({\n+            defaultValues:{\n+                  category:'',\n+                  location:null,\n+                  guestCount:1,\n+                  roomCount:1,\n+                  bathroomCount:1,\n+                  imageSrc: '',\n+                  price:1,\n+                  title:\"\",\n+                  description:''\n+            }\n+      });\n+\n+\n+      const category = watch('category'); // to store the form values\n+      const location = watch('location'); // to store the form values\n+      const setCustomValue = (id:string,value:any) => {\n+            setValue(id, value , {\n+                  shouldValidate:true,\n+                  shouldDirty:true,\n+                  shouldTouch:true\n+            })\n+      }\n+\n+      const onBack = () => {\n+            setStep((val) => val - 1);\n+      };\n+\n+      const onNext = () => {\n+            setStep((val) => val + 1);\n+      };\n+\n+      const actionLabel = useMemo(() => {\n+            if (step === STEPS.PRICE) return \"Create\";\n+\n+            return \"Next\";\n+      }, [step]);\n+\n+      const secondaryActionLabel = useMemo(() => {\n+            if (step === STEPS.CATEGORY) {\n+                  return undefined;\n+            }\n+\n+            return \"Back\";\n+      }, [step]);\n+\n+\n+      let bodyContent =  (\n+            <div className='flex flex-col gap-8'>\n+                  <Heading\n+                        title='Which of these best describes your place?'\n+                        subtitle={\"Pick a category\"}\n+                  />\n+                  <div className='grid grid-cols-1 md:grid-cols-2 gap-3 max-h-[50vh] overflow-y-auto'>\n+                        {categories.map((item) => (\n+                              <div\n+                                    key={item.label}\n+                                    className='col-span-1'\n+                              >\n+                                    <CategoryInput icon={item.icon} label={item.label} onClick={(category)=>setCustomValue('category',category)} selected={category === item.label}/>\n+                              </div>\n+                        ))}\n+                  </div>\n+            </div>\n+      );\n+\n+      if(step === STEPS.LOCATION) {\n+            bodyContent = (\n+                  <div className=\"flex flex-col gap-8\">\n+                        <Heading title=\"Where is your place located\" subtitle=\"Help quests find you!\"/>\n+                        <CountrySelect onChange={(value)=> setCustomValue('location' , value)} value={}/>\n+                  </div>\n+            )\n+      }\n+\n+      return (\n+            <Modal\n+                  isOpen={rentModal.isOpen}\n+                  onClose={rentModal.onClose}\n+                  onSubmit={onNext}\n+                  actionLabel={actionLabel}\n+                  secondaryActionLabel={secondaryActionLabel}\n+                  secondaryAction={step===STEPS.CATEGORY ? undefined : onBack}\n+                  title='Airbnb your home!'\n+                  body={bodyContent}\n+            />\n+      );\n+};\n+\n+export default RentModal;\n"
                }
            ],
            "date": 1692929164211,
            "name": "Commit-0",
            "content": "/** @format */\n\n\"use client\";\n\nimport useRentModal from \"@/app/hooks/useRentModal\";\nimport Modal from \"./Modal\";\nimport { useMemo, useState } from \"react\";\nimport Heading from \"../Heading\";\nimport { categories } from \"../navbar/Categories\";\nimport CategoryInput from \"../inputs/CategoryInput\";\nimport { FieldValues, useForm } from \"react-hook-form\";\n\nenum STEPS {\n      CATEGORY = 0,\n      LOCATION = 1,\n      INFO = 2,\n      IMAGES = 3,\n      DESCRIPTION = 4,\n      PRICE = 5,\n}\n\nconst RentModal = () => {\n      const rentModal = useRentModal();\n      const [step, setStep] = useState(STEPS.CATEGORY);\n\n      const {\n            register,\n            handleSubmit,\n            setValue,\n            watch,\n            formState:{\n                  errors\n            },\n            reset\n      } = useForm<FieldValues>({\n            defaultValues:{\n                  category:'',\n                  location:null,\n                  guestCount:1,\n                  roomCount:1,\n                  bathroomCount:1,\n                  imageSrc: '',\n                  price:1,\n                  title:\"\",\n                  description:''\n            }\n      });\n\n\n      const category = watch('category'); // to store the form values\n      const setCustomValue = (id:string,value:any) => {\n            setValue(id, value , {\n                  shouldValidate:true,\n                  shouldDirty:true,\n                  shouldTouch:true\n            })\n      }\n\n      const onBack = () => {\n            setStep((val) => val - 1);\n      };\n\n      const onNext = () => {\n            setStep((val) => val + 1);\n      };\n\n      const actionLabel = useMemo(() => {\n            if (step === STEPS.PRICE) return \"Create\";\n\n            return \"Next\";\n      }, [step]);\n\n      const secondaryActionLabel = useMemo(() => {\n            if (step === STEPS.CATEGORY) {\n                  return undefined;\n            }\n\n            return \"Back\";\n      }, [step]);\n\n\n      let bodyContent =  (\n            <div className='flex flex-col gap-8'>\n                  <Heading\n                        title='Which of these best describes your place?'\n                        subtitle={\"Pick a category\"}\n                  />\n                  <div className='grid grid-cols-1 md:grid-cols-2 gap-3 max-h-[50vh] overflow-y-auto'>\n                        {categories.map((item) => (\n                              <div\n                                    key={item.label}\n                                    className='col-span-1'\n                              >\n                                    <CategoryInput icon={item.icon} label={item.label} onClick={(category)=>setCustomValue('category',category)} selected={category === item.label}/>\n                              </div>\n                        ))}\n                  </div>\n            </div>\n      );\n\n      if(step === STEPS.LOCATION) {\n            bodyContent = (\n                  <div>\n                        Location Step!\n                  </div>\n            )\n      }\n\n      return (\n            <Modal\n                  isOpen={rentModal.isOpen}\n                  onClose={rentModal.onClose}\n                  onSubmit={rentModal.onClose}\n                  actionLabel={actionLabel}\n                  secondaryActionLabel={secondaryActionLabel}\n                  secondaryAction={step===STEPS.CATEGORY ? undefined : onBack}\n                  title='Airbnb your home!'\n                  body={bodyContent}\n            />\n      );\n};\n\nexport default RentModal;\n"
        }
    ]
}