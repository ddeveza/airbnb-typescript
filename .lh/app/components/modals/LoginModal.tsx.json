{
    "sourceFile": "app/components/modals/LoginModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1692586977991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1692586977991,
            "name": "Commit-0",
            "content": "/** @format */\n\"use client\";\n\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { FieldValues, SubmitHandler, useForm } from \"react-hook-form\";\nimport useRegisterModal from \"@/app/hooks/useRegisterModal\";\nimport Modal from \"./Modal\";\nimport Heading from \"../Heading\";\nimport Input from \"../inputs/Input\";\nimport { toast } from \"react-hot-toast\";\nimport Button from \"../Button\";\n\nimport {signIn, signOut} from 'next-auth/react'\nimport useLoginModal from \"../../hooks/useLoginModal\";\nimport { useRouter } from \"next/navigation\";\n\n\n\n\nconst LoginModal = () => {\n      const router = useRouter()\n      const { isOpen, onClose, onOpen } = useLoginModal();\n      const registerModal = useRegisterModal();\n      const [isLoading, setIsLoading] = useState(false);\n      const {\n            register,\n            handleSubmit,\n            formState: { errors },\n      } = useForm<FieldValues>({\n            defaultValues: {\n                  email: \"\",\n                  password: \"\",\n            },\n      });\n\n      const onSubmit: SubmitHandler<FieldValues> = (data) => {\n            setIsLoading(true);\n            signIn('credentials', {\n                  ...data,\n                  redirect:false\n            }).then((callback)=>{\n                  setIsLoading(false)\n                  if(callback?.ok){\n                        toast.success('Logged in');\n                        router.refresh()\n                        onClose();\n                  }\n\n                  if(callback?.error){\n                        toast.error(callback.error)\n                  }\n            })\n          \n      };\n\n      const bodyContent = (\n            <div className=\"flex flex-col gap-4\">\n                  <Heading title=\"Welcome back\"subtitle=\"Login to your account!\"/>\n                  <Input \n                        id='email'\n                        label=\"Email\"\n                        disabled={isLoading}\n                        register={register}\n                        errors= {errors}\n                        required\n                  />\n                  <Input \n                        id='password'\n                        label=\"Password\"\n                        type=\"password\"\n                        disabled={isLoading}\n                        register={register}\n                        errors= {errors}\n                        required\n                  />\n            </div>\n\n      )\n\n      const footerContent = (\n            <div className='flex flex-col gap-4 mt-3'>\n                  <hr />\n                  <Button\n                        outline\n                        label='Continue with Google'\n                        icon={FcGoogle}\n                        onClick={() =>signIn('google')}\n                  />\n                  <Button\n                        outline\n                        label='Continue with Github'\n                        icon={AiFillGithub}\n                        onClick={() => signIn('github')}\n                  />\n                  <div className=' text-neutral-500 text-center mt-4 font-light'>\n                        <div className=\" justify-center flex flex-row items-center gap-2\">\n                              <div>Already have an account?</div>\n                              <div onClick={onClose} className=\"text-neutral-800 cursor-pointer hover:underline\">Log in</div>\n                        </div>\n                  </div>\n            </div>\n      );\n\n      return (\n            <Modal\n                  disabled={isLoading}\n                  isOpen={isOpen}\n                  title='Login'\n                  actionLabel='Continue'\n                  onClose={onClose}\n                  onSubmit={handleSubmit(onSubmit)}\n                  body={bodyContent}\n                  footer={footerContent}\n            />\n      );\n};\n\nexport default LoginModal;\n"
        }
    ]
}